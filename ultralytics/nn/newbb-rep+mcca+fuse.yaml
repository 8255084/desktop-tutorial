# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# RT-DETR-l object detection model with P3-P5 outputs. For details see https://docs.ultralytics.com/models/rtdetr

# Parameters
nc: 14  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n-cls.yaml' will call yolov8-cls.yaml with scale 'n'
  # [depth, width, max_channels]
  l: [1.00, 1.00, 1024]

backbone:
  # [from, repeats, module, args]
  - [-1, 1, ConvNormLayer, [32, 3, 2, None, False, 'relu']] # 0-P1/2
  - [-1, 1, ConvNormLayer, [32, 3, 1, None, False, 'relu']] # 1
  - [-1, 1, ConvNormLayer, [64, 3, 1, None, False, 'relu']] # 2
  - [-1, 1, nn.MaxPool2d, [3, 2, 1]] # 3-P2/


  - [ -1, 1, Blocks, [ 64, BasicBlock, 2, 2, 'relu' ] ] # 4
  - [-1, 1, Blocks, [128, BasicBlock, 2, 3, 'relu']] #5
  - [-1, 1, Blocks, [256, BasicBlock, 2, 4, 'relu']] #6
  - [-1, 1, RepNCSPELAN4, [512, 256, 128, 1]]  # 7-P5/32
  - [-1, 1, MPCA, []] #8

head:
 - [-1, 1, Conv, [256, 1, 1, None, 1, 1, False]]  # 9 input_proj.2
 - [-1, 1, AIFI, [1024, 8]] # 10
 - [-1, 1, Conv, [256, 1, 1]]  # 11, Y5, lateral_convs.0


 - [-1, 1, Conv, [ 256, 3,2 ] ]  #12
 - [-1, 1, nn.ConvTranspose2d, [256, 2, 2, 0, 0, 256]]  #13
 - [ 7, 1, Conv, [256, 1,1]] # 14 [2, 256, 40, 40]
 - [ 5, 1, Conv, [256, 1,1]] # 15 [2, 256, 80, 80]
 - [-1, 1, Conv, [256, 3,2]] # 16
 - [15, 1, Conv, [128, 3,2]] # 17
 - [[14, 16], 1, Add, [0]] # 18
 - [[13, 17, 18], 1, Concat, [1]]  # cat backbone P4  #19

 - [-1, 1, Conv, [512, 1,1]] # 20
 - [-1, 1, RepC3, [512]]  # 21
 - [-1, 1, Conv, [256, 1, 1]]   # 22
 - [-1, 1, nn.ConvTranspose2d, [256, 2, 2, 0, 0, 256]] # 23
 - [ 4, 1, Conv, [256, 1,1]]  # 24
 - [-1, 1, Conv, [128, 3,2]]  # 25
 - [24, 1, Conv, [256, 3,2]]  # 26
 - [[15, 26], 1, Add, [0]] # 27
 - [[23, 25, 27], 1, Concat, [1]]  # 28  cat backbone P3
 - [-1, 1, Conv, [256, 1,1]]    # 29
 - [-1, 1, RepC3, [256]]  # 30

 - [-1, 1, AKConv, [256, 3, 2]]   # 31
 - [[-1, 22], 1, Concat, [1]]   # 32  cat head P4
 - [-1, 1, RepC3, [256]]  # 33 out (P4/16-medium)

 - [-1, 1, AKConv, [512, 3, 2]]   # 34
 - [[-1, 12], 1, Concat, [1]]   # 35 cat head P5
 - [-1, 1, RepC3, [256]] # 36 (P5/32-large)

 - [[30, 33, 36], 1, RTDETRDecoder, [nc, 256, 300, 4, 8, 3]]  # Detect(P3, P4, P5)